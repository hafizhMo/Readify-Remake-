//
//  CreateGoalInteractor.swift
//  Readify (Remake)
//
//  Created by Hafizh Mo on 05/09/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CreateGoalBusinessLogic {
  func saveGoal(request: CreateGoal.SaveGoal.Request)
  func prepareForm()
  func deleteGoal()
}

class CreateGoalInteractor: CreateGoalBusinessLogic {
  var presenter: CreateGoalPresentationLogic?
  
  func deleteGoal() {
    UserDefaults.standard.goal = nil
    presenter?.presentDeletedGoalCallback()
  }
  
  func saveGoal(request: CreateGoal.SaveGoal.Request) {
    var response = CreateGoal.SaveGoal.Response(isSuccess: true)
    
    guard let title = request.title, !title.isEmpty else {
      response = CreateGoal.SaveGoal.Response(isSuccess: false, message: "Title form is still empty!")
      presenter?.presentSavedGoalCallback(response: response)
      return
    }
    
    guard let totalStr = request.total, !totalStr.isEmpty else {
      response = CreateGoal.SaveGoal.Response(isSuccess: false, message: "Total form is still empty!")
      presenter?.presentSavedGoalCallback(response: response)
      return
    }
    
    if request.timer < 900 {
      response = CreateGoal.SaveGoal.Response(isSuccess: false, message: "Time target must be more than 15 minutes")
      presenter?.presentSavedGoalCallback(response: response)
      return
    }
    
    if let total = Int(totalStr), total > 0 {
      UserDefaults.standard.goal = Goal(title: title, total: total, timer: request.timer)
      presenter?.presentSavedGoalCallback(response: response)
    } else {
      response = CreateGoal.SaveGoal.Response(isSuccess: false, message: "Total pages must be greater than 0")
      presenter?.presentSavedGoalCallback(response: response)
    }
  }
  
  func prepareForm() {
    guard let goal = UserDefaults.standard.goal else {
      presenter?.presentCreateForm()
      return
    }
    
    let response = CreateGoal.PrepareGoal.Response(title: goal.title, total: goal.total, timer: goal.timer)
    presenter?.presentEditForm(response: response)
  }
}
