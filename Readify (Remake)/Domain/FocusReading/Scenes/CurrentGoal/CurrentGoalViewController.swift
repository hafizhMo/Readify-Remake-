//
//  CurrentGoalViewController.swift
//  Readify (Remake)
//
//  Created by Hafizh Mo on 29/08/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrentGoalDisplayLogic {
  func displayStreak(viewModel: CurrentGoal.ShowStreak.ViewModel)
  func displayGoal(viewModel: CurrentGoal.ShowGoal.ViewModel)
  func displayPlaceholder()
}

class CurrentGoalViewController: UIViewController, CurrentGoalDisplayLogic {
  var interactor: CurrentGoalBusinessLogic?
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  private func setup() {
    let viewController = self
    let interactor = CurrentGoalInteractor()
    let presenter = CurrentGoalPresenter()
    viewController.interactor = interactor
    interactor.presenter = presenter
    presenter.viewController = viewController
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    doSomething()
  }
  
  @IBOutlet weak var circularProgressBar: HalfCircularProgressView!
  
  @IBOutlet weak var progressByPagesLabel: UILabel!
  @IBOutlet weak var bookTitleLabel: UILabel!
  @IBOutlet weak var progressPercentageLabel: UILabel!
  @IBOutlet weak var yourProgressLabel: UILabel!
  @IBOutlet weak var dayAndWeekStreakLabel: UILabel!
  
  @IBOutlet weak var dayWeekLabel: UILabel!
  @IBOutlet weak var day1Button: UIButton!
  @IBOutlet weak var day2Button: UIButton!
  @IBOutlet weak var day3Button: UIButton!
  @IBOutlet weak var day4Button: UIButton!
  @IBOutlet weak var day5Button: UIButton!
  @IBOutlet weak var day6Button: UIButton!
  @IBOutlet weak var day7Button: UIButton!
  
  @IBOutlet weak var currentGoalView: UIView!
  @IBOutlet weak var emptyGoalView: UIView!
  
  @IBAction func didSetNewGoalTapped(_ sender: Any) {
  }
  
  @IBAction func didContinueReadingTapped(_ sender: Any) {
  }
  
  @IBAction func didEditGoalTapped(_ sender: Any) {
  }
  
  @IBAction func didCompleteTapped(_ sender: Any) {
  }
  
  func doSomething() {
    let request = CurrentGoal.ShowGoal.Request()
    interactor?.showGoal(request: request)
    interactor?.showStreak()
  }
  
  func displayGoal(viewModel: CurrentGoal.ShowGoal.ViewModel) {
    yourProgressLabel.isHidden = false
    currentGoalView.isHidden = false
    emptyGoalView.isHidden = true
    
    bookTitleLabel.text = viewModel.title
    progressByPagesLabel.text = viewModel.progressStr
    progressPercentageLabel.text = viewModel.percentageStr
    circularProgressBar.progress = viewModel.percentage
  }
  
  func displayPlaceholder() {
    yourProgressLabel.isHidden = true
    currentGoalView.isHidden = true
    emptyGoalView.isHidden = false
  }
  
  func displayStreak(viewModel: CurrentGoal.ShowStreak.ViewModel) {
    if viewModel.items.count < 7 {
      return
    }
    
    dayWeekLabel.text = viewModel.dayAndWeek
    day1Button.streakButton(item: viewModel.items[0])
    day2Button.streakButton(item: viewModel.items[1])
    day3Button.streakButton(item: viewModel.items[2])
    day4Button.streakButton(item: viewModel.items[3])
    day5Button.streakButton(item: viewModel.items[4])
    day6Button.streakButton(item: viewModel.items[5])
    day7Button.streakButton(item: viewModel.items[6])
  }
}

extension UIButton {
  
  func streakButton(item: (StreakType, String)) {
    switch item.0 {
    case .passed:
      setTitle("", for: .normal)
      self.setImage(UIImage(systemName: "checkmark"), for: .normal)
      tintColor = UIColor(named: "PrimaryColor")
      backgroundColor = UIColor(named: "SecondaryColor")
      layer.cornerRadius = 4
      titleLabel?.font = .systemFont(ofSize: 14)
    case .current:
      setImage(nil, for: .normal)
      tintColor = .white
      backgroundColor = UIColor(named: "PrimaryColor")
      layer.cornerRadius = 4
      self.setTitle(item.1, for: .normal)
      titleLabel?.font = .systemFont(ofSize: 14)
    case .upcoming:
      setImage(nil, for: .normal)
      tintColor = .tertiaryLabel
      backgroundColor = .quaternaryLabel
      setTitle(item.1, for: .normal)
      titleLabel?.font = .systemFont(ofSize: 14)
      layer.cornerRadius = 4
    }
  }
}
